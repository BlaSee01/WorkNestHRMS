// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkNestHRMS.Models;

#nullable disable

namespace WorkNestHRMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250126134442_AddResponseContentToTask")]
    partial class AddResponseContentToTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorkNestHRMS.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("AssignedWorkGroupId")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<List<string>>("Attachments")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponseContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("AssignedWorkGroupId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.UserWorkGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkGroupId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "WorkGroupId");

                    b.HasIndex("WorkGroupId");

                    b.ToTable("UserWorkGroups");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.UserWorkplace", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId", "WorkplaceId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("UserWorkplaces");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.WorkGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("WorkGroups");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.Workplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.Employee", b =>
                {
                    b.HasOne("WorkNestHRMS.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("WorkNestHRMS.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.Task", b =>
                {
                    b.HasOne("WorkNestHRMS.Models.User", "AssignedUser")
                        .WithMany("Tasks")
                        .HasForeignKey("AssignedUserId");

                    b.HasOne("WorkNestHRMS.Models.WorkGroup", "AssignedWorkGroup")
                        .WithMany("Tasks")
                        .HasForeignKey("AssignedWorkGroupId");

                    b.HasOne("WorkNestHRMS.Models.User", "CreatedByUser")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkNestHRMS.Models.Workplace", "Workplace")
                        .WithMany("Tasks")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("AssignedWorkGroup");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.UserWorkGroup", b =>
                {
                    b.HasOne("WorkNestHRMS.Models.User", "User")
                        .WithMany("UserWorkGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkNestHRMS.Models.WorkGroup", "WorkGroup")
                        .WithMany("UserWorkGroups")
                        .HasForeignKey("WorkGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkGroup");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.UserWorkplace", b =>
                {
                    b.HasOne("WorkNestHRMS.Models.User", "User")
                        .WithMany("UserWorkplaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkNestHRMS.Models.Workplace", "Workplace")
                        .WithMany("UserWorkplaces")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.WorkGroup", b =>
                {
                    b.HasOne("WorkNestHRMS.Models.Workplace", "Workplace")
                        .WithMany("WorkGroups")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.Workplace", b =>
                {
                    b.HasOne("WorkNestHRMS.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.User", b =>
                {
                    b.Navigation("CreatedTasks");

                    b.Navigation("Employee");

                    b.Navigation("Tasks");

                    b.Navigation("UserWorkGroups");

                    b.Navigation("UserWorkplaces");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.WorkGroup", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("UserWorkGroups");
                });

            modelBuilder.Entity("WorkNestHRMS.Models.Workplace", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("UserWorkplaces");

                    b.Navigation("WorkGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
